# Generated by Django 3.0.8 on 2020-07-16 19:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import store_web.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email_address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first_name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last_name')),
                ('date_of_birth', models.DateField(blank=True, verbose_name='date_of_birth')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='phone')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date_joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', store_web.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('address_id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(blank=True, max_length=100, verbose_name='full_name')),
                ('address1', models.CharField(max_length=200, verbose_name='address1')),
                ('address2', models.CharField(max_length=200, verbose_name='address2')),
                ('post_code', models.CharField(max_length=5, verbose_name='post_code')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('phone', models.CharField(max_length=30, verbose_name='phone')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('discount_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, verbose_name='name')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='discount')),
                ('crate_date', models.DateTimeField(auto_now_add=True, verbose_name='crate_date')),
                ('valid_date', models.DateTimeField(verbose_name='valid_date')),
                ('quantity', models.IntegerField(default=0, verbose_name='quantity')),
            ],
            options={
                'verbose_name': 'discount',
                'verbose_name_plural': 'discounts',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=100, verbose_name='price')),
                ('category', models.ManyToManyField(to='store_web.Category')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('tag', models.CharField(max_length=100, verbose_name='tag')),
                ('products', models.ManyToManyField(to='store_web.Product')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
            },
        ),
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('product_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(verbose_name='description')),
                ('product', models.ManyToManyField(to='store_web.Product')),
            ],
            options={
                'verbose_name': 'product_detail',
                'verbose_name_plural': 'product_details',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('crate_date', models.DateTimeField(auto_now_add=True, verbose_name='crate_date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='modified_date')),
                ('status', models.CharField(max_length=100, verbose_name='status')),
                ('amount', models.IntegerField(default=0, verbose_name='amount')),
                ('addresses', models.ManyToManyField(to='store_web.Address')),
                ('discount', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store_web.Discount')),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'order',
                'verbose_name_plural': 'orders',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('order_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(default=0, verbose_name='quantity')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_web.Orders')),
                ('product_detail', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='store_web.ProductDetail')),
            ],
            options={
                'verbose_name': 'order_item',
                'verbose_name_plural': 'order_items',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('cart_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('saved_for_later', models.BooleanField(blank=True, verbose_name='saved_for_later')),
                ('quantity', models.IntegerField(default=0, verbose_name='quantity')),
                ('time_added', models.DateTimeField(auto_now_add=True, verbose_name='time_added')),
                ('product_detail', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store_web.ProductDetail')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'cart_item',
                'verbose_name_plural': 'cart_items',
            },
        ),
    ]
